trigger:
  branches:
    include:
    - develop
  paths:
    include:
      - src/FuncCheckServerStatus
      - pipelines/azure.yml
      - templates
    exclude:
      - src/on-premise
      - src/onpremise-docker.yml

resources:
- repo: self

pool:
  vmImage: ubuntu-latest

variables:
- group: deployment
- name: azureServiceConnection
  value: 'ARM2'


stages:
- stage: Azure
  jobs:  
  - job: Provision
    steps:
      - task: AzureCLI@2
        inputs:
          azureSubscription: $(azureServiceConnection)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |          
            az group create --name $(resourceGroupName) --location $(rgLocation)
            az deployment group create --resource-group $(resourceGroupName) --template-file $(templateFile) --parameters func-name=$(func-name)
    
  - job: Build
    dependsOn: Provision
    steps:
      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          projects: |
            src/FuncCheckServerStatus/*.csproj
          arguments: --output $(System.DefaultWorkingDirectory)/$(func-name) --configuration Release

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(System.DefaultWorkingDirectory)/$(func-name)'
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/$(func-name).zip
          replaceExistingArchive: true

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'artifacts'
          publishLocation: 'Container'
  
- stage: AzureDeployment
  displayName: Azure Deployment
  dependsOn: Azure
  jobs:          
  - deployment: Deploy
    environment: $(func-name)
    strategy:      
      runOnce:
        deploy:
          steps:          
          - task: AzureFunctionApp@1
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: functionApp
              appName: $(func-name)
              package: '$(Pipeline.Workspace)/artifacts/$(func-name).zip'
